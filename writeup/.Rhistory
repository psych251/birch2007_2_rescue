mean_red = mean(red),
sd_red = sd(red),
mean_blue = mean(blue),
sd_blue = sd(blue),
mean_green = mean(green),
sd_green = sd(green),
mean_purple = mean(purple),
sd_purple = sd(purple)
), digits = 2,
table.attr = "class=\"striped\"",
format = "html")
mean(final_data$red)
sd(final_data$red)
sd(final_data$blue)
mean(final_data$green)
sd(final_data$green)
mean(final_data$purple)
sd(final_data$purple)
max(final_data$purple)
max(final_data$green)
hist(final_data$green)
hist(final_data$green)
hist(final_data$green)
Hmisc::describe(final_data$green)
psych::::describe(final_data$green)
psych::describe(final_data$green)
Hmisc::describe(final_data$purple)
View(final_data)
knitr::opts_chunk$set(echo = T)
library(tidyverse); library(ggplot2); library(car); library(effsize); library(qualtRics); library(readxl); library(patchwork); library(ggpubr); library(metafor)
# 80% power
power.t.test(delta = .472, sd = 1, sig.level = 0.05, power = .80,
type = "two.sample",
alternative = "two.sided")
# 90% power
power.t.test(delta = .472, sd = 1, sig.level = 0.05, power = .90,
type = "two.sample",
alternative = "two.sided")
# 95% power
power.t.test(delta = .472, sd = 1, sig.level = 0.05, power = .95,
type = "two.sample",
alternative = "two.sided")
power.t.test(delta = .236, n = 129, sd = 1, sig.level = 0.05, power = NULL,
type = "two.sample",
alternative = "one.sided")
final_data_raw <- read_survey("/Users/ottuba/birch2007_2_rescue/data/final_data/Birch+&+Bloom+replication_December+7,+2023_11.14.csv")
selected_columns <-
c("consent_form", "FL_16_DO", "age", "high_school", "gender", "colorblindness",
"red_knowplausible", "green_knowplausible", "purple_knowplausible", "blue_knowplausible",
"red_knowimplausible", "green_prob", "purple_prob", "blue_knowimplausible",
"red_ignorance", "green_ignorance", "purple_ignorance", "blue_ignorance")
final_data_tidy <- final_data_raw %>%
filter(Finished != "FALSE", # Exclude participants who didn't finish
FL_16_DO != "NA", # Exclude participants who weren't assigned condition
PID != "NA", # Exclude people w/o Prolific ID (my own test runs)
PID != "a", # Exclude people with random Prolific ID (my own test runs)
!grepl("TA", PID)) %>%  # Exclude TA submissions
select(all_of(selected_columns))
nrow(final_data_tidy)
Hmisc::describe(final_data_tidy$FL_16_DO)
Hmisc::describe(final_data_tidy$high_school)
Hmisc::describe(final_data_tidy$gender)
Hmisc::describe(final_data_tidy$colorblindness)
final_data_tidy = final_data_tidy %>%
filter(high_school == "Yes", # Keep only participants who completed high school
colorblindness == "No", # Keep only participants with color vision
consent_form == "I agree") # Keep only participants who gave consent
final_data_tidy <- final_data_tidy %>%
rename(green_knowimplausible = green_prob,
purple_knowimplausible  = purple_prob)
final_data_tidy <-
final_data_tidy %>%
mutate(subid = row.names(.)) %>%
gather(measurement, probability_pct,
red_knowplausible:blue_ignorance) %>%
separate(measurement, c("color", "condition"))
final_data =
final_data_tidy %>%
spread(color, probability_pct) %>%
filter(complete.cases(.))
final_data <-
final_data %>%
mutate(total_sum = rowSums(select(., blue, green, purple, red))) %>%
mutate(deviation_from_100 = abs(total_sum - 100)) %>%
mutate(within_tolerance = total_sum >= 95 & total_sum <= 105)
Hmisc::describe(final_data$deviation_from_100)
final_data <-
final_data %>%
filter(deviation_from_100 <= 5) %>%
select(-c("FL_16_DO"))
knitr::kable(head(final_data),
table.attr = "class=\"striped\"",
format = "html")
Hmisc::describe(final_data$condition)
knitr::kable(final_data %>%
group_by(condition) %>%
summarise(
mean_red = mean(red),
sd_red = sd(red),
mean_blue = mean(blue),
sd_blue = sd(blue),
mean_green = mean(green),
sd_green = sd(green),
mean_purple = mean(purple),
sd_purple = sd(purple)
), digits = 2,
table.attr = "class=\"striped\"",
format = "html")
t.test(red ~ condition,
data = final_data[final_data$condition!="knowimplausible",])
effsize::cohen.d(final_data$red[final_data$condition!="ignorance"],
final_data$red[final_data$condition!="knowplausible"])
birch_bloom_data = data.frame(
condition=c(rep("Ignorance", 4),
rep("Knowledge-Plausible", 4),
rep("Knowledge-Implausible", 4)),
container=c("blue",
"red",
"purple",
"green"),
probability_percent =c(71, 23, 2, 3, # Mean for ignorance
59, 34, 3, 4, # Mean for knowledge plausible
73, 19, 6, 3), # Mean for knowledge implausible
standard_deviation = c(26, 22, 5, 7, # SD for ignorance
27, 25, 5, 7,  # SD for knowledge plausible
29, 21, 16, 5), # SD for knowledge implausible
n = c(rep(52, 12))
) %>%
mutate(standard_error = standard_deviation / sqrt(n))
filtered_birch_bloom_data = birch_bloom_data %>%
filter(container == "red",
condition != "Knowledge-Implausible")
plot1 <-
ggplot(filtered_birch_bloom_data,
aes(x = condition, y = probability_percent, fill = condition)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("Birch & Bloom (2007; N = 104)") +
theme_linedraw() +
theme(plot.title=element_text(hjust=.5),
legend.position = "none",
axis.title.x = element_blank(),
axis.text.x = element_blank()) +
geom_errorbar(aes(ymin=probability_percent - standard_error,
ymax = probability_percent + standard_error), width = .1) +
scale_fill_manual(values = c(rgb(101/255,187/255,103/255),
rgb(249/255,170/255,112/255)),
labels = c("Ignorance", "Knowledge-plausible")) +
ylim(0,100) +
xlab("Condition") +
ylab("Percent of Red") +
annotate("text", x = 1.5, y = 57, label = "***", size = 6) +
geom_segment(aes(x = 1, xend = 2, y = 55, yend = 55), colour = "black", linetype = "solid", size = 0.5)
plot1
# Importing Borcher data collected via MTurk
borchers_replication_all_participants <-
read_xls("/Users/ottuba/birch2007_2_rescue/data/borchers_replication_anonymized.xls")
# Tidying data
borchers_replication_tidy <- borchers_replication_all_participants %>%
mutate(subid = row.names(.)) %>%
gather(measurement, probability_pct, red_knowledgeplausible:blue_ignorance) %>%
filter(!is.na(probability_pct)) %>%
separate(measurement, c("color", "condition"))
# Eligible participants
borchers_replication_filtered_data = borchers_replication_tidy %>%
filter(high_school=="Yes",
color_blind=="No",
consent=="I agree") #Consenting to the study
plot2 <-
borchers_replication_filtered_data %>%
filter(color=="red") %>%
ggplot() +
aes(x=condition, y=probability_pct, fill=condition) +
stat_summary(geom="bar") +
stat_summary(geom="errorbar", width = 0.1, fun.data=mean_se) +
xlab("Condition") +
ylab("Percent of Red") +
ggtitle("Borchers (2018; N = 73)") +
scale_fill_manual(values = c(rgb(101/255,187/255,103/255),
rgb(249/255,170/255,112/255)),
labels = c("Ignorance", "Knowledge-plausible")) +
theme_linedraw() +
theme(plot.title=element_text(hjust=.5),
legend.position = "bottom",
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank()) +
ylim(0,100) +
stat_compare_means(comparisons = list(c("ignorance", "knowledgeplausible")),
label = "p.signif",
label.size = 24, bracket.size = .75, label.y = c(50,50))
plot2
plot3 <-
final_data_tidy %>%
filter(color == "red" & condition != "knowimplausible") %>%
ggplot() +
aes(x = condition, y = probability_pct, fill = condition) +
stat_summary(geom = "bar") +
stat_summary(geom = "errorbar", width = 0.1, fun.data = mean_se) +
xlab("Condition") +
ggtitle("Abutto (2023; N = 374)") +
ylab("Percent of Red") +
scale_fill_manual(values = c(rgb(101/255,187/255,103/255),
rgb(249/255,170/255,112/255)),
labels = c("Ignorance", "Knowledge-plausible")) +
theme_linedraw() +
theme(plot.title = element_text(hjust = .5),
legend.position = "none",
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank()) +
ylim(0, 100) +
stat_compare_means(comparisons = list(c("ignorance", "knowplausible")),
label = "p.signif",
label.size = 24, bracket.size = .75, label.y = c(50,50))
plot3
combined_plot <- plot1 + plot2 + plot3
combined_plot
plot4 <-
final_data_tidy %>%
mutate(condition = fct_relevel(condition,
"Knowledge-plausible",
"Ignorance",
"Knowledge-implausible")) %>%
ggplot() +
aes(x = color, y = probability_pct, fill = condition) +
geom_bar(stat = "summary", fun = "mean", position = position_dodge(width = 0.8)) +
geom_errorbar(stat = "summary", fun.data = mean_se, width = 0.1, position = position_dodge(width = 0.8)) +
xlab("Container") +
ylab("Average Probability Rating") +
ggtitle("Abutto (2023; N = 374)") +
scale_fill_manual(values = c(rgb(249/255,170/255,112/255),
rgb(101/255,187/255,103/255),
rgb(167/255,144/255,192/255)),
labels = c("Knowledge-plausible",
"Ignorance",
"Knowledge-implausible")) +
theme_linedraw() +
theme(plot.title = element_text(hjust = .5),
legend.position = "none") +
ylim(0, 100)
plot5 <-
birch_bloom_data %>%
mutate(condition = fct_relevel(condition,
"Knowledge-plausible",
"Ignorance",
"Knowledge-implausible")) %>%
ggplot() +
aes(x = container, y = probability_percent, fill = condition) +
geom_bar(stat = "summary", fun = "mean", position = position_dodge(width = 0.8)) +
geom_errorbar(aes(ymin = probability_percent - standard_error,
ymax = probability_percent + standard_error),
width = 0.1, position = position_dodge(width = 0.8)) +
xlab("Container") +
ylab("Average Probability Rating") +
ggtitle("Birch and Bloom (2007; N = 155)") +
scale_fill_manual(values = c(rgb(249/255,170/255,112/255),
rgb(101/255,187/255,103/255),
rgb(167/255,144/255,192/255)),
labels = c("Knowledge-plausible",
"Ignorance",
"Knowledge-implausible")) +
theme_linedraw() +
theme(plot.title = element_text(hjust = .5),
legend.position = "right",
axis.text.y = element_blank(),
axis.title.y = element_blank()) +
ylim(0, 100)
combined_plot2 <- plot4+plot5
combined_plot2
t.test(red ~ condition,
data = final_data[final_data$condition!="knowplausible",])
t.test(blue ~ condition,
data = final_data[final_data$condition!="knowimplausible",])
t.test(blue ~ condition,
data = final_data[final_data$condition!="knowplausible",])
t.test(purple ~ condition,
data = final_data[final_data$condition!="knowplausible",])
raw_metaanalysis_data <- as.data.frame(read_xlsx("/Users/ottuba/birch2007_2_rescue/data/Birch-Bloom_minimeta_data.xlsx", range = "B2:G6"))
raw_metaanalysis_data[,c("N", "raw_mean_difference",
"raw_low", "raw_high")] <-
lapply(raw_metaanalysis_data[,c("N", "raw_mean_difference",
"raw_low", "raw_high")], as.numeric)
knitr::kable(raw_metaanalysis_data,
table.attr = "class=\"striped\"",
format = "html")
for_mod <- raw_metaanalysis_data %>%
mutate(se=(raw_high-raw_low)/(2*1.96))
mini_meta_mod <- rma(yi=raw_mean_difference,
sei=se, slab=Study, data=for_mod)
summary(mini_meta_mod)
aggregate <- tibble(Study="Aggregate", Citation=NA,
raw_mean_difference=mini_meta_mod$b,
raw_low=mini_meta_mod$ci.lb,
raw_high=mini_meta_mod$ci.ub,
N=sum(raw_metaanalysis_data$N))
for_plot <-
raw_metaanalysis_data %>%
bind_rows(aggregate) %>%
mutate(Study=factor(Study,
levels=c("Aggregate",
"Birch and Bloom",
"Bridgers",
"Borchers",
"Abutto")))
ggplot(for_plot,
aes(x = Study, y = raw_mean_difference,
ymin = raw_low, ymax = raw_high, size=N))+
geom_errorbar(colour='darkgray',size=.5,width=.25)+
geom_point(data=for_plot |> filter(Study != "Aggregate"))+
geom_point(data=for_plot |> filter(Study == "Aggregate"),
shape=18, color="red")+
coord_flip()+
ylim(-25,25) +
scale_size_area()+
geom_hline(yintercept=0,color="black")+
theme_linedraw() +
theme(legend.position = "none")+
geom_vline(xintercept = 1.5, lty=2)+
labs(y="Main effect size on original scale", x="")
forest(mini_meta_mod)
knitr::opts_chunk$set(echo = T)
library(tidyverse); library(ggplot2); library(car); library(effsize); library(qualtRics); library(readxl); library(patchwork); library(ggpubr); library(metafor)
# 80% power
power.t.test(delta = .472, sd = 1, sig.level = 0.05, power = .80,
type = "two.sample",
alternative = "two.sided")
# 90% power
power.t.test(delta = .472, sd = 1, sig.level = 0.05, power = .90,
type = "two.sample",
alternative = "two.sided")
# 95% power
power.t.test(delta = .472, sd = 1, sig.level = 0.05, power = .95,
type = "two.sample",
alternative = "two.sided")
power.t.test(delta = .236, n = 129, sd = 1, sig.level = 0.05, power = NULL,
type = "two.sample",
alternative = "one.sided")
final_data_raw <- read_survey("/Users/ottuba/birch2007_2_rescue/data/final_data/Birch+&+Bloom+replication_December+7,+2023_11.14.csv")
selected_columns <-
c("consent_form", "FL_16_DO", "age", "high_school", "gender", "colorblindness",
"red_knowplausible", "green_knowplausible", "purple_knowplausible", "blue_knowplausible",
"red_knowimplausible", "green_prob", "purple_prob", "blue_knowimplausible",
"red_ignorance", "green_ignorance", "purple_ignorance", "blue_ignorance")
final_data_tidy <- final_data_raw %>%
filter(Finished != "FALSE", # Exclude participants who didn't finish
FL_16_DO != "NA", # Exclude participants who weren't assigned condition
PID != "NA", # Exclude people w/o Prolific ID (my own test runs)
PID != "a", # Exclude people with random Prolific ID (my own test runs)
!grepl("TA", PID)) %>%  # Exclude TA submissions
select(all_of(selected_columns))
View(final_data_tidy)
write.csv(final_data_tidy, "2023-12-12_final_data_tidy.csv")
final_data_raw <- read_survey("/Users/ottuba/birch2007_2_rescue/data/final_data/Birch+&+Bloom+replication_December+7,+2023_11.14.csv")
# Establish which columns to filter for
selected_columns <-
c("consent_form", "FL_16_DO", "age", "high_school", "gender", "colorblindness",
"red_knowplausible", "green_knowplausible", "purple_knowplausible", "blue_knowplausible",
"red_knowimplausible", "green_prob", "purple_prob", "blue_knowimplausible",
"red_ignorance", "green_ignorance", "purple_ignorance", "blue_ignorance")
final_data_tidy <- final_data_raw %>%
# Get rid of test run rows
filter(Finished != "FALSE", # Exclude participants who didn't finish
FL_16_DO != "NA", # Exclude participants who weren't assigned condition
PID != "NA", # Exclude people w/o Prolific ID (my own test runs)
PID != "a", # Exclude people with random Prolific ID (my own test runs)
!grepl("TA", PID)) %>%  # Exclude TA submissions
# Filter to keep only columns established above
select(all_of(selected_columns))
# Set echo = TRUE (showing code) as default for all code chunks
knitr::opts_chunk$set(echo = T)
# Import relevant libraries
library(tidyverse); library(ggplot2); library(car); library(effsize); library(qualtRics); library(readxl); library(patchwork); library(ggpubr); library(metafor)
# 80% power
power.t.test(delta = .472, sd = 1, sig.level = 0.05, power = .80,
type = "two.sample",
alternative = "two.sided")
# 90% power
power.t.test(delta = .472, sd = 1, sig.level = 0.05, power = .90,
type = "two.sample",
alternative = "two.sided")
# 95% power
power.t.test(delta = .472, sd = 1, sig.level = 0.05, power = .95,
type = "two.sample",
alternative = "two.sided")
power.t.test(delta = .236, n = 129, sd = 1, sig.level = 0.05, power = NULL,
type = "two.sample",
alternative = "one.sided")
final_data_raw <- read_survey("/Users/ottuba/birch2007_2_rescue/data/final_data/Birch+&+Bloom+replication_December+7,+2023_11.14.csv")
# Show first few rows of data set
knitr::kable(head(final_data_tidy),
table.attr = "class=\"striped\"",
format = "html")
# Set echo = TRUE (showing code) as default for all code chunks
knitr::opts_chunk$set(echo = T)
# Import relevant libraries
library(tidyverse); library(ggplot2); library(car); library(effsize); library(qualtRics); library(readxl); library(patchwork); library(ggpubr); library(metafor)
# 80% power
power.t.test(delta = .472, sd = 1, sig.level = 0.05, power = .80,
type = "two.sample",
alternative = "two.sided")
# 90% power
power.t.test(delta = .472, sd = 1, sig.level = 0.05, power = .90,
type = "two.sample",
alternative = "two.sided")
# 95% power
power.t.test(delta = .472, sd = 1, sig.level = 0.05, power = .95,
type = "two.sample",
alternative = "two.sided")
power.t.test(delta = .236, n = 129, sd = 1, sig.level = 0.05, power = NULL,
type = "two.sample",
alternative = "one.sided")
final_data_raw <- read_survey("/Users/ottuba/birch2007_2_rescue/data/final_data/Birch+&+Bloom+replication_December+7,+2023_11.14.csv")
# Show first few rows of data set
knitr::kable(head(final_data_tidy),
table.attr = "class=\"striped\"",
format = "html")
final_data_raw <- read_survey("/Users/ottuba/birch2007_2_rescue/data/final_data/Birch+&+Bloom+replication_December+7,+2023_11.14.csv")
# Establish which columns to filter for
selected_columns <-
c("consent_form", "FL_16_DO", "age", "high_school", "gender", "colorblindness",
"red_knowplausible", "green_knowplausible", "purple_knowplausible", "blue_knowplausible",
"red_knowimplausible", "green_prob", "purple_prob", "blue_knowimplausible",
"red_ignorance", "green_ignorance", "purple_ignorance", "blue_ignorance")
final_data_tidy <- final_data_raw %>%
# Get rid of test run rows
filter(Finished != "FALSE", # Exclude participants who didn't finish
FL_16_DO != "NA", # Exclude participants who weren't assigned condition
PID != "NA", # Exclude people w/o Prolific ID (my own test runs)
PID != "a", # Exclude people with random Prolific ID (my own test runs)
!grepl("TA", PID)) %>%  # Exclude TA submissions
# Filter to keep only columns established above
select(all_of(selected_columns))
# Show first few rows of data set
knitr::kable(head(final_data_tidy),
table.attr = "class=\"striped\"",
format = "html")
# Count rows of data (1 row per participant)
nrow(final_data_tidy)
# Run frequency statistics over randomizer variable
Hmisc::describe(final_data_tidy$FL_16_DO)
# Run standard descriptive statistics over age variable
psych::describe(final_data_tidy$age)
# Run frequency statistics over high school variable
Hmisc::describe(final_data_tidy$high_school)
# Run frequency statistics over gender variable
Hmisc::describe(final_data_tidy$gender)
# Run frequency statistics over colorblindness variable
Hmisc::describe(final_data_tidy$colorblindness)
final_data_tidy = final_data_tidy %>%
filter(high_school == "Yes", # Keep only participants who completed high school
colorblindness == "No", # Keep only participants with color vision
consent_form == "I agree") # Keep only participants who gave consent
final_data_tidy <- final_data_tidy %>%
rename(green_knowimplausible = green_prob,
purple_knowimplausible  = purple_prob) # Rename columns to match others
final_data_tidy <-
final_data_tidy %>%
mutate(subid = row.names(.)) %>% # Subject ID equal to row number
# Group by
gather(measurement, probability_pct,
red_knowplausible:blue_ignorance) %>%
separate(measurement, c("color", "condition"))
# Set echo = TRUE (showing code) as default for all code chunks
knitr::opts_chunk$set(echo = T)
# Import relevant libraries
library(tidyverse); library(ggplot2); library(car); library(effsize); library(qualtRics); library(readxl); library(patchwork); library(ggpubr); library(metafor)
# 80% power
power.t.test(delta = .472, sd = 1, sig.level = 0.05, power = .80,
type = "two.sample",
alternative = "two.sided")
# 90% power
power.t.test(delta = .472, sd = 1, sig.level = 0.05, power = .90,
type = "two.sample",
alternative = "two.sided")
# 95% power
power.t.test(delta = .472, sd = 1, sig.level = 0.05, power = .95,
type = "two.sample",
alternative = "two.sided")
power.t.test(delta = .236, n = 129, sd = 1, sig.level = 0.05, power = NULL,
type = "two.sample",
alternative = "one.sided")
final_data_raw <- read_survey("/Users/ottuba/birch2007_2_rescue/data/final_data/Birch+&+Bloom+replication_December+7,+2023_11.14.csv")
# Show first few rows of data set
knitr::kable(head(final_data_tidy),
table.attr = "class=\"striped\"",
format = "html")
# Set echo = TRUE (showing code) as default for all code chunks
knitr::opts_chunk$set(echo = T)
# Import relevant libraries
library(tidyverse); library(ggplot2); library(car); library(effsize); library(qualtRics); library(readxl); library(patchwork); library(ggpubr); library(metafor)
# 80% power
power.t.test(delta = .472, sd = 1, sig.level = 0.05, power = .80,
type = "two.sample",
alternative = "two.sided")
# 90% power
power.t.test(delta = .472, sd = 1, sig.level = 0.05, power = .90,
type = "two.sample",
alternative = "two.sided")
# 95% power
power.t.test(delta = .472, sd = 1, sig.level = 0.05, power = .95,
type = "two.sample",
alternative = "two.sided")
power.t.test(delta = .236, n = 129, sd = 1, sig.level = 0.05, power = NULL,
type = "two.sample",
alternative = "one.sided")
final_data_raw <- read_survey("/Users/ottuba/birch2007_2_rescue/data/final_data/Birch+&+Bloom+replication_December+7,+2023_11.14.csv")
# Show first few rows of data set
knitr::kable(head(final_data_tidy),
table.attr = "class=\"striped\"",
format = "html")
